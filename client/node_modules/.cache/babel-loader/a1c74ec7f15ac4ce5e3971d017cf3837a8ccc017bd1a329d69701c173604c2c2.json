{"ast":null,"code":"var _jsxFileName = \"D:\\\\Imp\\\\Coding\\\\abheepay-pos-management\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const userData = await authAPI.getCurrentUser();\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password, userType) => {\n    try {\n      const response = await authAPI.login(email, password, userType);\n      const {\n        token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', token);\n      setUser(userData);\n      toast.success('Login successful!');\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', token);\n      setUser(newUser);\n      toast.success('Registration successful!');\n      return newUser;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await authAPI.changePassword(currentPassword, newPassword);\n      toast.success('Password changed successfully');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Password change failed');\n      throw error;\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = await authAPI.updateProfile(profileData);\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return updatedUser;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Profile update failed');\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    changePassword,\n    updateProfile,\n    checkAuth\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","removeItem","login","email","password","userType","response","setItem","success","_error$response","_error$response$data","data","register","newUser","_error$response2","_error$response2$data","logout","changePassword","currentPassword","newPassword","_error$response3","_error$response3$data","updateProfile","profileData","updatedUser","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Imp/Coding/abheepay-pos-management/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const userData = await authAPI.getCurrentUser();\r\n        setUser(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      localStorage.removeItem('token');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password, userType) => {\r\n    try {\r\n      const response = await authAPI.login(email, password, userType);\r\n      const { token, user: userData } = response;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(userData);\r\n      \r\n      toast.success('Login successful!');\r\n      return userData;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Login failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      const { token, user: newUser } = response;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setUser(newUser);\r\n      \r\n      toast.success('Registration successful!');\r\n      return newUser;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Registration failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await authAPI.changePassword(currentPassword, newPassword);\r\n      toast.success('Password changed successfully');\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Password change failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const updatedUser = await authAPI.updateProfile(profileData);\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n      return updatedUser;\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Profile update failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    changePassword,\r\n    updateProfile,\r\n    checkAuth,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}